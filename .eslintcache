[{"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/reportWebVitals.js":"1","/Users/irosen419/Desktop/Practice Projects/country-quiz/src/App.js":"2","/Users/irosen419/Desktop/Practice Projects/country-quiz/src/data.js":"3","/Users/irosen419/Desktop/Practice Projects/country-quiz/src/Containers/QuizCard.js":"4","/Users/irosen419/Desktop/Practice Projects/country-quiz/src/index.js":"5"},{"size":362,"mtime":1606336773423,"results":"6","hashOfConfig":"7"},{"size":357,"mtime":1606425052703,"results":"8","hashOfConfig":"7"},{"size":267,"mtime":1606341269882,"results":"9","hashOfConfig":"7"},{"size":951,"mtime":1606425398458,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1606336773422,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ykyo2z",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/reportWebVitals.js",[],"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/App.js",[],"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/data.js",[],"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/Containers/QuizCard.js",["22","23","24","25","26","27"],"/Users/irosen419/Desktop/Practice Projects/country-quiz/src/index.js",[],{"ruleId":"28","severity":1,"message":"29","line":8,"column":12,"nodeType":"30","messageId":"31","endLine":8,"endColumn":17},{"ruleId":"28","severity":1,"message":"32","line":8,"column":19,"nodeType":"30","messageId":"31","endLine":8,"endColumn":27},{"ruleId":"28","severity":1,"message":"33","line":9,"column":12,"nodeType":"30","messageId":"31","endLine":9,"endColumn":20},{"ruleId":"28","severity":1,"message":"34","line":9,"column":22,"nodeType":"30","messageId":"31","endLine":9,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":11,"column":15,"nodeType":"37","endLine":16,"endColumn":6},{"ruleId":"28","severity":1,"message":"38","line":18,"column":11,"nodeType":"30","messageId":"31","endLine":18,"endColumn":21},"no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar","'setScore' is assigned a value but never used.","'answered' is assigned a value but never used.","'setAnswered' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'getCountry' is assigned a value but never used."]